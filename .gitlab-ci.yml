stages:
  - test
  - build

.ubuntu-20-04:
  image: ubuntu:20.04
  tags:
    - linux
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - export CMAKE_BUILD_PARALLEL_LEVEL=$(nproc)
    - export CTEST_PARALLEL_LEVEL=$(nproc)
    - apt-get -y update
    - apt-get -y install build-essential cmake git libboost-dev libboost-date-time-dev libboost-locale-dev pandoc qtbase5-dev
    - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=Off -S . -B build

.windows-1809:
  tags:
    - windows
    - windows-1809
  variables:
    PYTHON_PATH: 'C:\Python38'
    QT_VERSION: 5.15.0
    QT_TOOLCHAIN: msvc2019_64
    Qt5_DIR: "$QT_VERSION/$QT_TOOLCHAIN/lib/cmake/Qt5"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  before_script:
    - choco install nsis -y
    - choco install pandoc -y --ia=ALLUSERS=1
    - choco install cmake -y --installargs 'ADD_CMAKE_TO_PATH=System'
    - choco install git.install -y --params "/GitOnlyOnPath /SChannel /NoAutoCrlf"
    - choco install python -y --params "/quiet /InstallAllUsers=1 /Include_doc=0 /Include_debug=1 /CompileAll=1 /PrependPath=1 /Include_dev=1 /Include_exe=1 /InstallLauncherAllUsers=1 /TargetDir=$($env:PYTHON_PATH) /Include_lib=1 /Include_pip=1 /Include_symbols=1 /Include_tcltk=0 /Include_test=0 /Include_tools=1"
#    - curl.exe -L -o boost-installer.exe https://downloads.sourceforge.net/project/boost/boost-binaries/1.67.0/boost_1_67_0-msvc-14.1-64.exe
#    - ./boost-installer.exe /VERYSILENT
    - refreshenv
    - vcpkg install boost-locale boost-date-time
    - $env:Path += ";$($env:PYTHON_PATH);$($env:PYTHON_PATH)\Scripts;$($env:USER_PYTHON_PATH)\Scripts;$($env:NSIS_PATH);C:\Program Files\CMake\bin"
    - setx Path "$($env:Path)"
    - python -m ensurepip
    - pip install --user requests semantic_version lxml
    - git clone https://github.com/engnr/qt-downloader.git
    - python qt-downloader\qt-downloader windows desktop "$env:QT_VERSION" "win64_$env:QT_TOOLCHAIN"
    - $env:Path += ";$env:QT_VERSION\$env:QT_TOOLCHAIN\bin"
    - setx Path "$($env:Path)"
    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DBUILD_TESTING=Off -S . -B build

test-ubuntu-20-04:
  extends: .ubuntu-20-04
  stage: test
  script:
    - cmake -DBUILD_TESTING=On build
    - cmake --build build --target splitbill_lib_test
    - cd build
    - ctest

test-windows-1809:
  extends: .windows-1809
  stage: test
  script:
    - cmake -DBUILD_TESTING=On build
    - cmake --build build --target splitbill_lib_test
    - cd build
    - ctest

build-ubuntu-20-04:
  extends: .ubuntu-20-04
  stage: build
  script:
    - cmake -DBUILD_PACKAGE=On build
    - cmake --build build
    - cd build
    - cpack -G "TGZ;TBZ2;DEB" -B "$(pwd)/packages"
  artifacts:
    paths:
      - build/packages/splitbill-*.tar.gz
      - build/packages/splitbill-*.tar.bz2
      - build/packages/splitbill-*.deb
      - build/packages/splitbill-*.md5
    expire_in: 1 week
